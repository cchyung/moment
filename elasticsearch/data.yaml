apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: es-data
  labels:
    component: es
    role: data
spec:
  serviceName: es-data
  replicas: 1
  template:
    metadata:
      labels:
        component: es
        role: data
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: data
      initContainers:
        - name: init-sysctl
          image: busybox:1.27.2
          command: ["/bin/sh","-c"]
          args: ["sysctl -w vm.max_map_count=262144; chmod -R a+rwx /data"] #revisit
          volumeMounts:
            - name: storage
              mountPath: /data
          securityContext:
            privileged: true
      containers:
      - name: es-data
        image: us.gcr.io/hack-sc-project/elasticsearch-server:6.2.4-0.0.3
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: es-cluster
        - name: NODE_MASTER
          value: "false" # will not perform master tasks
        - name: NODE_INGEST
          value: "false" # will not perform ingest tasks
        - name: HTTP_ENABLE
          value: "false" # will not accept http requests (handled by coordinating nodes (client))
        - name: ES_JAVA_OPTS
          value: -Xms3g -Xmx3g # min and max jvm heap size, must be same
        - name: DISCOVERY_SERVICE
          value: es-discovery
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        resources:
          limits:
            cpu: 1.2 # how many cores/vcpus available -- data nodes are the ones you want to beef up
        ports:
        - containerPort: 9300
          name: transport
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 240
          periodSeconds: 10
        volumeMounts:
        - name: storage
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      storageClassName: ssd # ssd will be much faster thatn standard and storage is a bottle neck to be concerned with
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 50Gi #how much storage to allocate for each data node, more is better